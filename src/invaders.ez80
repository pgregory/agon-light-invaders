; Assembly control flags
DEBUG: equ 0

MAX_ARGS:	equ 1
	include "include/crt.inc"
	include "include/vdp.inc"
	include "include/math.inc"
	include "include/utils.inc"	
	include "include/player.inc"
	include "include/invaders.inc"

_main:
	call vdp_init
	
	; Initialise the invader sprites
	call init_invaders
	call invader_shoot
	call init_player
	
	ld a, BMP_SHIELD
	ld bc, 32
	ld de, 140
	call draw_bitmap
	ld bc, 32+22+23
	call draw_bitmap
	ld bc, 32+22+23+22+23
	call draw_bitmap
	ld bc, 32+22+23+22+23+22+23
	call draw_bitmap

	ld b, 13
	ld hl, 8 
@line_loop:
	push bc
	ld a, BMP_LINE
	ld c, l
	ld b, h
	ld de, 180
	call draw_bitmap
	ld a, 16
	ld b, 0
	ld c, a
	add hl, bc
	pop bc
	djnz @line_loop
	
	;ld a, 8
	;call draw_line
	
	ld a, (next_sprite_index)
	call activate_sprites

@loop:
	call delay 
	call update_invaders
	call update_invader_shots

	call update_sprites

	call process_player
	call update_gui

	ld a, (keycode)

	if DEBUG
	; Print keycode for identification
    push af
	ld l, a
	ld h, 0
	call home_cursor
	call print_Hex16
    pop af
	endif

	cp 27
	jr z, exit

	jr @loop
exit:	
	call vdp_close
	ret

delay:
	ld b, 1
@loop:	
	call vsync
	djnz @loop
	ret

	

bottom_line:
	dw 8
	dw 180
	dw 168
	dw 180


update_gui:
	push hl
	push bc
	push af
	ld hl, title
	ld bc, title_end-title
	rst.lil $18
	pop af
	pop bc
	pop hl

	ld a, BMP_PLAYER
	ld bc, 8*30
	ld de, 165
	call draw_bitmap
	ld bc, 8*30+8+16
	call draw_bitmap
	ld bc, 8*30+8+16+8+16
	call draw_bitmap

	ret

title:
	db 31, 30, 1
	db "SPACE"
	db 31, 29, 2
	db "INVADERS"
	db 31, 30, 5
	db "SCORE"
	db 31, 30, 7
	db "00020"
	db 31, 31, 10
	db "HI"
	db 31, 30, 11
	db "SCORE"
	db 31, 30, 13 
	db "00020"
	db 31, 30, 19
	db "03"
title_end:



vdp_data:
	db 22, 13 ;; Mode 141
	db 23, 1, 0 ;; Hide cursor
	db "Video mode established", 13, 10
	db "Setting keyboard mode", 13,10
	db "Sending bitmaps to VDP", 13, 10
	db 23, 0, $88
	dw 250, 33
	db 255	
	db 23, 0, $86    ; Get screen dimensions
	db 23, 27, 16    ; Reset and clear sprites
	db 23, 0, $C0, 0 ; Turn off logical screen coordinates.

	DEFBMP BMP_INVADER1_1, 16, 20, "imgs/invader1_1.rgba"
	DEFBMP BMP_INVADER1_2, 16, 20, "imgs/invader1_2.rgba"
	DEFBMP BMP_INVADER2_1, 16, 20, "imgs/invader2_1.rgba"
	DEFBMP BMP_INVADER2_2, 16, 20, "imgs/invader2_2.rgba"
	DEFBMP BMP_INVADER3_1, 16, 20, "imgs/invader3_1.rgba"
	DEFBMP BMP_INVADER3_2, 16, 20, "imgs/invader3_2.rgba"
	DEFBMP BMP_SAUCER, 16, 16, "imgs/saucer.rgba"
	DEFBMP BMP_SHIELD, 22, 16, "imgs/shield.rgba"
	DEFBMP BMP_LINE, 16, 1, "imgs/line.rgba"
	DEFBMP BMP_PLAYER, 16, 8, "imgs/player.rgba"
	DEFBMP BMP_BULLET, 1, 4, "imgs/bullet.rgba"
	DEFBMP BMP_BLANK, 16, 20, "imgs/blank_invader.rgba"
	DEFBMP BMP_INV_EXPLOSION, 16, 20, "imgs/alien_explosion.rgba"
	DEFBMP BMP_PLYR_B_EXPL, 8, 8, "imgs/plyr_b_expl.rgba"
	DEFBMP BMP_INV_SHOT_F1, 3, 8, "imgs/invader_shot_f1.rgba"
	DEFBMP BMP_INV_SHOT_F2, 3, 8, "imgs/invader_shot_f2.rgba"
	DEFBMP BMP_INV_SHOT_F3, 3, 8, "imgs/invader_shot_f3.rgba"
	DEFBMP BMP_INV_SHOT_F4, 3, 8, "imgs/invader_shot_f4.rgba"
	DEFBMP BMP_PLAYER_EXP1, 16, 8, "imgs/player_exp1.rgba"
	DEFBMP BMP_PLAYER_EXP2, 16, 8, "imgs/player_exp2.rgba"
	DEFWAV -1, 5547, "audio/player_shoot.pcm" ; Length 5547
	
	db 23, 0, $85, 1, 4, -1

	db 12
vdp_data_end:	
