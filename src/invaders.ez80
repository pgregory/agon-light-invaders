; Assembly control flags
DEBUG: equ 0

MAX_ARGS:	equ 1
	include "include/crt.inc"
	include "include/vdp.inc"
	include "include/math.inc"
	include "include/utils.inc"	
	include "include/player.inc"
	include "include/invaders.inc"

_main:
	call vdp_init
	call init_player
	call init_invaders

display_menu:
	ld hl, @menu
	ld bc, @menu_end-@menu
	rst.lil $18

@key_loop:
	call delay

	if DEBUG
	ld a, (keycode)
	; Print keycode for identification
    push af
	ld l, a
	ld h, 0
	call home_cursor
	call print_Hex16
    pop af
	endif

	ld a, (keycode)
	or a
	jr z, @key_loop
	
@key_release:
	call delay
	ld a, (keycode)
	or a
	jr nz, @key_release

	jp new_game

@menu:
	db 31, 13, 10
	db "SPACE  INVADERS"
	db 31, 13, 13
	db "ANY KEY TO PLAY"
@menu_end:

	
;--------------------------------
new_game:
	call vdp_cls
	call reset_player
	call reset_invaders

	ld a, BMP_SHIELD
	ld bc, 32
	ld de, 140
	call draw_bitmap
	ld bc, 32+22+23
	call draw_bitmap
	ld bc, 32+22+23+22+23
	call draw_bitmap
	ld bc, 32+22+23+22+23+22+23
	call draw_bitmap

	ld a, 2
	ld ix, bottom_line
	call draw_line
	
	ld a, (next_sprite_index)
	call activate_sprites
	
	call display_gui

@loop:
	call delay 
	call count_invaders
	call update_invaders
	call update_invader_shots

	call update_sprites

	call process_player
	
	ld a, (player_lives)
	or a
	jp z, game_over
	
	call update_gui
	call play_fleet_sound
	
	ld a, (keycode)

	if DEBUG
	; Print keycode for identification
    push af
	ld l, a
	ld h, 0
	call home_cursor
	call print_Hex16
    pop af
	endif

	cp 27
	jr z, exit

	jr @loop
exit:	
	call vdp_close
	ret
	

game_over:
	call vdp_cls
	call vdp_silence
	jp display_menu

delay:
	push bc
	ld b, 1
@loop:	
	call vsync
	djnz @loop
	pop bc
	ret

	

display_gui:
	push hl
	push bc
	push af
	ld hl, @title
	ld bc, @title_end-@title
	rst.lil $18
	pop af
	pop bc
	pop hl

	; ld a, BMP_PLAYER
	; ld bc, 8*30
	; ld de, 165
	; call draw_bitmap
	; ld bc, 8*30+8+16
	; call draw_bitmap
	; ld bc, 8*30+8+16+8+16
	; call draw_bitmap

	ret

@title:
	db 31, 30, 1
	db "SPACE"
	db 31, 29, 2
	db "INVADERS"
	db 31, 30, 5
	db "SCORE"
	; db 31, 30, 7
	; db "00020"
	; db 31, 31, 10
	; db "HI"
	; db 31, 30, 11
	; db "SCORE"
	; db 31, 30, 13 
	; db "00000"
	db 31, 30, 19
	db "99"
@title_end:


update_gui:
	; Update score
	ld.lil bc, $071e
	call set_cursor
	ld hl, (player_score)
	call print_Dec16

	; Update lives
	ld.lil bc, $131e
	call set_cursor
	ld a, (player_lives)
	ld hl, 0
	ld l, a
	call print_Dec8

	ret


bottom_line:
	dw 8
	dw 180
	dw 208
	dw 180

